{"version":3,"sources":["Data.js","Piano.js","App.js","index.js"],"names":["notesDisplayed","notesDisplayedString","correctNote","pianoClickedKey","indexd","opacity","rightorWrong","isSharp","isFlat","isTreble","afterNote","notes","blackkeys","correct","Data","wrong","Checker","array","index","answer","isSharps","isFlats","substring","note","capNote","toUpperCase","answerNote","terribleSharpChecker","terribleFlatChecker","setPianoClick","item","StyleSheet","width","height","borderStyle","borderColor","borderRadius","borderWidth","backgroundColor","whitekeys","Piano","props","style","display","position","map","onClick","key","left","count","at","notesListed","notesListedSharps","notesListedFlats","createRandomNotesArray","amount","i","rand","Math","floor","random","length","push","randDecision","randFlats","randSharps","console","log","App","state","notestoDisplay","color","unselectable","className","justifyContent","notation","this","engraverParams","scale","window","innerWidth","setState","paddingTop","flexDirection","alignItems","FormControlLabel","control","Checkbox","inputProps","onChange","label","Button","variant","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3ba175fb.chunk.js","sourcesContent":["export default {\r\n  notesDisplayed: [],\r\n  notesDisplayedString: \"\",\r\n  correctNote: \"placeholder\",\r\n  pianoClickedKey: \"\",\r\n  indexd: 0,\r\n  opacity: 0,\r\n  rightorWrong: \"placeholder\",\r\n  isSharp: false,\r\n  isFlat: false,\r\n  isTreble: false,\r\n  afterNote: \"2\",\r\n};\r\n","import React from \"react\";\r\nimport Data from \"./Data\";\r\n\r\nconst notes = [\"c\", \"d\", \"e\", \"f\", \"g\", \"a\", \"b\"];\r\nconst blackkeys = [\"cd\", \"de\", \"fg\", \"ga\", \"ab\"];\r\n\r\nvar thisthing = 0;\r\n\r\nfunction correct() {\r\n  Data.opacity = 1;\r\n  Data.rightorWrong = \"Correct.\";\r\n}\r\n\r\nfunction wrong() {\r\n  Data.opacity = 1;\r\n  Data.rightorWrong = \"Wrong.\";\r\n}\r\n\r\nfunction marking(sharpVar, flatVar) {\r\n  var initialSpacing = 5;\r\n  var spacingSplice = 2;\r\n  if (sharpVar === false && flatVar === false) {\r\n  }\r\n}\r\n\r\nfunction Checker(array, index, answer) {\r\n  var isSharps = false;\r\n  var isFlats = false;\r\n  Data.correctNote = array[index];\r\n\r\n  if (array[index].substring(0, 1) === \"^\") {\r\n    isSharps = true;\r\n  }\r\n\r\n  if (array[index].substring(1, 2) === \"_\") {\r\n    isFlats = true;\r\n  }\r\n\r\n  if (isSharps === true) {\r\n    terribleSharpChecker(array[index].substring(1, 2), answer);\r\n  } else if (isFlats === true) {\r\n    terribleFlatChecker(array[index].substring(1, 2), answer);\r\n  }\r\n  var tempAnswer = answer.toUpperCase() === array[index].toUpperCase();\r\n  if (tempAnswer) {\r\n    correct();\r\n  } else {\r\n    wrong();\r\n  }\r\n  index++;\r\n}\r\n\r\nfunction terribleSharpChecker(note, answer) {\r\n  var capNote = note.toUpperCase();\r\n  var answerNote = answer.toUpperCase();\r\n\r\n  Data.correctNote = `${capNote} Sharp`;\r\n\r\n  if (capNote === \"C\" && answerNote === \"CD\") {\r\n    correct();\r\n  } else if (capNote === \"D\" && answerNote === \"DE\") {\r\n    correct();\r\n  } else if (capNote === \"E\" && answerNote === \"F\") {\r\n    correct();\r\n  } else if (capNote === \"F\" && answerNote === \"FG\") {\r\n    correct();\r\n  } else if (capNote === \"G\" && answerNote === \"GA\") {\r\n    correct();\r\n  } else if (capNote === \"A\" && answerNote === \"AB\") {\r\n    correct();\r\n  } else if (capNote === \"B\" && answerNote === \"C\") {\r\n    correct();\r\n  } else {\r\n    wrong();\r\n  }\r\n}\r\n\r\nfunction terribleFlatChecker(note, answer) {\r\n  var capNote = note.toUpperCase();\r\n  var answerNote = note.toUpperCase();\r\n\r\n  Data.correctNote = `${capNote} Sharp`;\r\n\r\n  if (capNote === \"C\" && answerNote === \"B\") {\r\n    correct();\r\n  } else if (capNote === \"D\" && answerNote === \"CD\") {\r\n    correct();\r\n  } else if (capNote === \"E\" && answerNote === \"DE\") {\r\n    correct();\r\n  } else if (capNote === \"F\" && answerNote === \"E\") {\r\n    correct();\r\n  } else if (capNote === \"G\" && answerNote === \"FG\") {\r\n    correct();\r\n  } else if (capNote === \"A\" && answerNote === \"GA\") {\r\n    correct();\r\n  } else if (capNote === \"B\" && answerNote === \"AB\") {\r\n    correct();\r\n  } else {\r\n    wrong();\r\n  }\r\n}\r\n\r\nfunction godPleaseWork(count) {\r\n  if (count > 2) {\r\n    return 54 * (count + 1) - 15;\r\n  }\r\n  return 54 * count - 15;\r\n}\r\n\r\nfunction setPianoClick(item) {\r\n  Data.pianoClickedKey = \"\";\r\n  Data.pianoClickedKey = item;\r\n  Checker(Data.notesDisplayed, Data.indexd, Data.pianoClickedKey);\r\n  Data.indexd++;\r\n  Data.opacity = 1;\r\n}\r\n\r\nfunction Piano(props) {\r\n  return (\r\n    <div style={{ display: \"flex\", position: \"absolute\" }}>\r\n      {notes.map((item) => {\r\n        return (\r\n          <div key={item}>\r\n            <div\r\n              style={StyleSheet.whitekeys}\r\n              onClick={() => setPianoClick(item)}\r\n            />\r\n          </div>\r\n        );\r\n      })}\r\n      {blackkeys.map((item, key) => {\r\n        return (\r\n          <div\r\n            style={{\r\n              position: \"absolute\",\r\n              left: `${godPleaseWork(key + 1)}px`,\r\n            }}\r\n            key={item}\r\n          >\r\n            <div\r\n              style={StyleSheet.blackkeys}\r\n              onClick={() => setPianoClick(item)}\r\n            />\r\n            {item.at}\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst StyleSheet = {\r\n  blackkeys: {\r\n    width: \"25px\",\r\n    height: \"100px\",\r\n    borderStyle: \"solid\",\r\n    borderColor: \"white\",\r\n    borderRadius: \"5px\",\r\n    borderWidth: \"2px\",\r\n    backgroundColor: \"black\",\r\n  },\r\n  whitekeys: {\r\n    width: \"50px\",\r\n    height: \"200px\",\r\n    borderStyle: \"solid\",\r\n    borderColor: \"black\",\r\n    borderRadius: \"5px\",\r\n    borderWidth: \"2px\",\r\n    backgroundColor: \"white\",\r\n  },\r\n};\r\n\r\nexport default Piano;\r\n","import \"./App.css\";\r\nimport React from \"react\";\r\nimport Data from \"./Data\";\r\nimport Piano from \"./Piano\";\r\nimport { Button, Checkbox, FormControlLabel } from \"@material-ui/core\";\r\nimport { Notation } from \"react-abc\";\r\n\r\nconst noteslist = [\"a\", \"b\", \"c\"];\r\nconst notesListed = [\r\n  \"a\",\r\n  \"b\",\r\n  \"c\",\r\n  \"d\",\r\n  \"e\",\r\n  \"f\",\r\n  \"g\",\r\n  \"A\",\r\n  \"B\",\r\n  \"C\",\r\n  \"D\",\r\n  \"E\",\r\n  \"F\",\r\n  \"G\",\r\n];\r\n\r\nconst notesListedSharps = [\r\n  \"^a\",\r\n  \"^b\",\r\n  \"^c\",\r\n  \"^d\",\r\n  \"^e\",\r\n  \"^f\",\r\n  \"^g\",\r\n  \"^A\",\r\n  \"^B\",\r\n  \"^C\",\r\n  \"^D\",\r\n  \"^E\",\r\n  \"^F\",\r\n  \"^G\",\r\n];\r\n\r\nconst notesListedFlats = [\r\n  \"_a\",\r\n  \"_b\",\r\n  \"_c\",\r\n  \"_d\",\r\n  \"_e\",\r\n  \"_f\",\r\n  \"_g\",\r\n  \"_A\",\r\n  \"_B\",\r\n  \"_C\",\r\n  \"_D\",\r\n  \"_E\",\r\n  \"_F\",\r\n  \"_G\",\r\n];\r\n\r\nvar wrongorRight = \"----\";\r\n\r\n//add !mark! before the note to hightlight it\r\n//would be good for the user to keep track on which note\r\n//they are on\r\n\r\n//^ - sharp, _ - flat\r\n\r\n//add (V: V3 clef=bass\\n[V: V3]) at start of string to make treble also add\r\n// ,,2 after notes to make it work\r\n\r\nfunction createRandomNotesArray(amount) {\r\n  Data.opacity = 0;\r\n  Data.notesDisplayed = [];\r\n  Data.notesDisplayedString = \"!mark!\";\r\n\r\n  if (Data.isTreble) {\r\n    Data.afterNote = \",,2\";\r\n    //initial 21?\r\n    Data.notesDisplayedString = \"V: V3 clef=bass\\n[V: V3]!mark!\";\r\n  } else {\r\n    Data.afterNote = \"2\";\r\n  }\r\n\r\n  if (Data.isFlat === false && Data.isSharp === false) {\r\n    for (var i = 0; i < amount; i++) {\r\n      var rand = Math.floor(Math.random() * notesListed.length);\r\n      Data.notesDisplayed.push(notesListed[rand]);\r\n      Data.notesDisplayedString += notesListed[rand];\r\n      Data.notesDisplayedString += Data.afterNote;\r\n    }\r\n  } else if (Data.isFlat === true && Data.isSharp === false) {\r\n    for (var i = 0; i < amount; i++) {\r\n      var randDecision = Math.floor(Math.random() * 2);\r\n      var rand = Math.floor(Math.random() * notesListed.length);\r\n      var randFlats = Math.floor(Math.random() * notesListedFlats.length);\r\n      if (randDecision === 0) {\r\n        Data.notesDisplayed.push(notesListed[rand]);\r\n        Data.notesDisplayedString += notesListed[rand];\r\n        Data.notesDisplayedString += Data.afterNote;\r\n      } else {\r\n        Data.notesDisplayed.push(notesListedFlats[randFlats]);\r\n        Data.notesDisplayedString += notesListedFlats[randFlats];\r\n        Data.notesDisplayedString += Data.afterNote;\r\n      }\r\n    }\r\n  } else if (Data.isFlat === false && Data.isSharp === true) {\r\n    for (var i = 0; i < amount; i++) {\r\n      var randDecision = Math.floor(Math.random() * 2);\r\n      var rand = Math.floor(Math.random() * notesListed.length);\r\n      var randSharps = Math.floor(Math.random() * notesListedSharps.length);\r\n      if (randDecision === 0) {\r\n        Data.notesDisplayed.push(notesListed[rand]);\r\n        Data.notesDisplayedString += notesListed[rand];\r\n        Data.notesDisplayedString += Data.afterNote;\r\n      } else {\r\n        Data.notesDisplayed.push(notesListedSharps[randSharps]);\r\n        Data.notesDisplayedString += notesListedSharps[randSharps];\r\n        Data.notesDisplayedString += Data.afterNote;\r\n      }\r\n    }\r\n  } else {\r\n    for (var i = 0; i < amount; i++) {\r\n      var randDecision = Math.floor(Math.random() * 3);\r\n      var rand = Math.floor(Math.random() * notesListed.length);\r\n      var randSharps = Math.floor(Math.random() * notesListedSharps.length);\r\n      var randFlats = Math.floor(Math.random() * notesListedFlats.length);\r\n      if (randDecision === 0) {\r\n        Data.notesDisplayed.push(notesListed[rand]);\r\n        Data.notesDisplayedString += notesListed[rand];\r\n        Data.notesDisplayedString += Data.afterNote;\r\n      } else if (randDecision === 1) {\r\n        Data.notesDisplayed.push(notesListedSharps[randSharps]);\r\n        Data.notesDisplayedString += notesListedSharps[randSharps];\r\n        Data.notesDisplayedString += Data.afterNote;\r\n      } else {\r\n        Data.notesDisplayed.push(notesListedFlats[randFlats]);\r\n        Data.notesDisplayedString += notesListedFlats[randFlats];\r\n        Data.notesDisplayedString += Data.afterNote;\r\n      }\r\n    }\r\n  }\r\n  Data.indexd = 0;\r\n  console.log(Data.notesDisplayedString);\r\n}\r\ncreateRandomNotesArray(10);\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      opacity: Data.opacity,\r\n      rightorWrong: Data.rightorWrong,\r\n      notestoDisplay: Data.notesDisplayedString,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ color: \"white\" }}>\r\n        <p\r\n          unselectable=\"on\"\r\n          className=\"answerDisplay\"\r\n          style={{ display: \"flex\", justifyContent: \"center\" }}\r\n        >\r\n          SIGHT READING PRACTICE\r\n        </p>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            backgroundColor: \"white\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <Notation\r\n            notation={this.state.notestoDisplay}\r\n            engraverParams={{ scale: window.innerWidth / 500 }}\r\n          />\r\n        </div>\r\n\r\n        <p\r\n          unselectable=\"on\"\r\n          className=\"answerDisplay\"\r\n          style={{\r\n            display: \"flex\",\r\n            opacity: Data.opacity,\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          {this.state.rightorWrong}\r\n        </p>\r\n        <p\r\n          unselectable=\"on\"\r\n          className=\"answerDisplay\"\r\n          style={{\r\n            display: \"flex\",\r\n            opacity: Data.opacity,\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          {Data.correctNote.toUpperCase()}\r\n        </p>\r\n        <div\r\n          style={{ display: \"flex\", justifyContent: \"center\" }}\r\n          onClick={() =>\r\n            this.setState({\r\n              opacity: Data.opacity,\r\n              rightorWrong: Data.rightorWrong,\r\n            })\r\n          }\r\n        >\r\n          <Piano />\r\n        </div>\r\n        <div\r\n          style={{\r\n            paddingTop: \"200px\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <div>\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  color=\"primary\"\r\n                  inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                  style={{ color: \"white\" }}\r\n                  onChange={() => (Data.isSharp = !Data.isSharp)}\r\n                ></Checkbox>\r\n              }\r\n              label=\"Include Sharps\"\r\n            ></FormControlLabel>\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  color=\"primary\"\r\n                  inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                  style={{ color: \"white\" }}\r\n                  onChange={() => (Data.isFlat = !Data.isFlat)}\r\n                ></Checkbox>\r\n              }\r\n              label=\"Include Flats\"\r\n            ></FormControlLabel>\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  color=\"primary\"\r\n                  inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                  style={{ color: \"white\" }}\r\n                  onChange={() => (Data.isTreble = !Data.isTreble)}\r\n                ></Checkbox>\r\n              }\r\n              label=\"Treble\"\r\n            ></FormControlLabel>\r\n          </div>\r\n          <div>\r\n            <Button\r\n              variant=\"contained\"\r\n              onClick={() => {\r\n                createRandomNotesArray(10);\r\n                this.setState({ notestoDisplay: Data.notesDisplayedString });\r\n              }}\r\n            >\r\n              New Notes\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}