{"version":3,"sources":["Data.js","Piano.js","App.js","index.js"],"names":["notesDisplayed","notesDisplayedOther","notesDisplayedString","correctNote","pianoClickedKey","indexd","opacity","rightorWrong","isSharp","isFlat","isTreble","afterNote","lastSpacing","notes","blackkeys","correct","Data","wrong","Checker","array","index","answer","newNotesDisplayed","replace","initialSpacing","insert","length","marking","isSharps","isFlats","substring","note","capNote","toUpperCase","answerNote","terribleSharpChecker","terribleFlatChecker","setPianoClick","item","String","prototype","string","this","substr","StyleSheet","width","height","borderStyle","borderColor","borderRadius","borderWidth","backgroundColor","whitekeys","Piano","props","style","display","position","map","onClick","key","left","count","at","notesListed","scaling","window","innerWidth","createRandomNotesArray","amount","firstIter","afterNoteDone","i","rand","Math","floor","random","push","randDecision","randFlats","randSharps","App","state","notestoDisplay","color","unselectable","className","justifyContent","notation","engraverParams","scale","setState","paddingTop","flexDirection","alignItems","FormControlLabel","control","Checkbox","inputProps","onChange","label","Button","variant","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3e18a5fb.chunk.js","sourcesContent":["export default {\r\n  notesDisplayed: [],\r\n  notesDisplayedOther: [],\r\n  notesDisplayedString: \"\",\r\n  correctNote: \"placeholder\",\r\n  pianoClickedKey: \"\",\r\n  indexd: 0,\r\n  opacity: 0,\r\n  rightorWrong: \"placeholder\",\r\n  isSharp: false,\r\n  isFlat: false,\r\n  isTreble: false,\r\n  afterNote: \"2\",\r\n  lastSpacing: 0,\r\n};\r\n","import React from \"react\";\r\nimport Data from \"./Data\";\r\n\r\nconst notes = [\"c\", \"d\", \"e\", \"f\", \"g\", \"a\", \"b\"];\r\nconst blackkeys = [\"cd\", \"de\", \"fg\", \"ga\", \"ab\"];\r\n\r\nvar thisthing = 0;\r\n\r\nfunction correct() {\r\n  Data.opacity = 1;\r\n  Data.rightorWrong = \"Correct.\";\r\n}\r\n\r\nfunction wrong() {\r\n  Data.opacity = 1;\r\n  Data.rightorWrong = \"Wrong.\";\r\n}\r\n\r\nString.prototype.insert = function (index, string) {\r\n  if (index > 0) {\r\n    return this.substring(0, index) + string + this.substr(index);\r\n  }\r\n  return string + this;\r\n};\r\n\r\nfunction marking(index) {\r\n  var newNotesDisplayed = Data.notesDisplayedString.replace(\"!mark!\", \"\");\r\n  Data.notesDisplayedString = newNotesDisplayed;\r\n  var initialSpacing = 10;\r\n\r\n  if ((index + 1) % 4 == 0 && index !== 0) {\r\n    Data.lastSpacing++;\r\n  }\r\n\r\n  if (Data.isTreble === true) {\r\n    initialSpacing = 33;\r\n  }\r\n\r\n  Data.notesDisplayedString = Data.notesDisplayedString.insert(\r\n    initialSpacing + Data.notesDisplayedOther[index].length + Data.lastSpacing,\r\n    \"!mark!\"\r\n  );\r\n\r\n  Data.lastSpacing = Data.notesDisplayedOther[index].length + Data.lastSpacing;\r\n}\r\nfunction Checker(array, index, answer) {\r\n  marking(index);\r\n\r\n  var isSharps = false;\r\n  var isFlats = false;\r\n  Data.correctNote = array[index];\r\n\r\n  if (array[index].substring(0, 1) === \"^\") {\r\n    isSharps = true;\r\n  } else if (array[index].substring(1, 2) === \"_\") {\r\n    isFlats = true;\r\n  }\r\n\r\n  if (isSharps === true) {\r\n    terribleSharpChecker(array[index].substring(1, 2), answer);\r\n  } else if (isFlats === true) {\r\n    terribleFlatChecker(array[index].substring(1, 2), answer);\r\n  }\r\n  var tempAnswer = answer.toUpperCase() === array[index].toUpperCase();\r\n  if (tempAnswer) {\r\n    correct();\r\n  } else {\r\n    wrong();\r\n  }\r\n  index++;\r\n}\r\n\r\nfunction terribleSharpChecker(note, answer) {\r\n  var capNote = note.toUpperCase();\r\n  var answerNote = answer.toUpperCase();\r\n\r\n  Data.correctNote = `${capNote} Sharp`;\r\n\r\n  if (capNote === \"C\" && answerNote === \"CD\") {\r\n    correct();\r\n  } else if (capNote === \"D\" && answerNote === \"DE\") {\r\n    correct();\r\n  } else if (capNote === \"E\" && answerNote === \"F\") {\r\n    correct();\r\n  } else if (capNote === \"F\" && answerNote === \"FG\") {\r\n    correct();\r\n  } else if (capNote === \"G\" && answerNote === \"GA\") {\r\n    correct();\r\n  } else if (capNote === \"A\" && answerNote === \"AB\") {\r\n    correct();\r\n  } else if (capNote === \"B\" && answerNote === \"C\") {\r\n    correct();\r\n  } else {\r\n    wrong();\r\n  }\r\n}\r\n\r\nfunction terribleFlatChecker(note, answer) {\r\n  var capNote = note.toUpperCase();\r\n  var answerNote = note.toUpperCase();\r\n\r\n  Data.correctNote = `${capNote} Sharp`;\r\n\r\n  if (capNote === \"C\" && answerNote === \"B\") {\r\n    correct();\r\n  } else if (capNote === \"D\" && answerNote === \"CD\") {\r\n    correct();\r\n  } else if (capNote === \"E\" && answerNote === \"DE\") {\r\n    correct();\r\n  } else if (capNote === \"F\" && answerNote === \"E\") {\r\n    correct();\r\n  } else if (capNote === \"G\" && answerNote === \"FG\") {\r\n    correct();\r\n  } else if (capNote === \"A\" && answerNote === \"GA\") {\r\n    correct();\r\n  } else if (capNote === \"B\" && answerNote === \"AB\") {\r\n    correct();\r\n  } else {\r\n    wrong();\r\n  }\r\n}\r\n\r\nfunction godPleaseWork(count) {\r\n  if (count > 2) {\r\n    return 54 * (count + 1) - 15;\r\n  }\r\n  return 54 * count - 15;\r\n}\r\n\r\nfunction setPianoClick(item) {\r\n  Data.pianoClickedKey = \"\";\r\n  Data.pianoClickedKey = item;\r\n  Checker(Data.notesDisplayed, Data.indexd, Data.pianoClickedKey);\r\n  Data.indexd++;\r\n  Data.opacity = 1;\r\n}\r\n\r\nfunction Piano(props) {\r\n  return (\r\n    <div style={{ display: \"flex\", position: \"absolute\" }}>\r\n      {notes.map((item) => {\r\n        return (\r\n          <div key={item}>\r\n            <div\r\n              style={StyleSheet.whitekeys}\r\n              onClick={() => setPianoClick(item)}\r\n            />\r\n          </div>\r\n        );\r\n      })}\r\n      {blackkeys.map((item, key) => {\r\n        return (\r\n          <div\r\n            style={{\r\n              position: \"absolute\",\r\n              left: `${godPleaseWork(key + 1)}px`,\r\n            }}\r\n            key={item}\r\n          >\r\n            <div\r\n              style={StyleSheet.blackkeys}\r\n              onClick={() => setPianoClick(item)}\r\n            />\r\n            {item.at}\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst StyleSheet = {\r\n  blackkeys: {\r\n    width: \"25px\",\r\n    height: \"100px\",\r\n    borderStyle: \"solid\",\r\n    borderColor: \"white\",\r\n    borderRadius: \"5px\",\r\n    borderWidth: \"2px\",\r\n    backgroundColor: \"black\",\r\n  },\r\n  whitekeys: {\r\n    width: \"50px\",\r\n    height: \"200px\",\r\n    borderStyle: \"solid\",\r\n    borderColor: \"black\",\r\n    borderRadius: \"5px\",\r\n    borderWidth: \"2px\",\r\n    backgroundColor: \"white\",\r\n  },\r\n};\r\n\r\nexport default Piano;\r\n","import \"./App.css\";\r\nimport React from \"react\";\r\nimport Data from \"./Data\";\r\nimport Piano from \"./Piano\";\r\nimport { Button, Checkbox, FormControlLabel } from \"@material-ui/core\";\r\nimport { Notation } from \"react-abc\";\r\n\r\nconst notesListed = [\r\n  \"a\",\r\n  \"b\",\r\n  \"c\",\r\n  \"d\",\r\n  \"e\",\r\n  \"f\",\r\n  \"g\",\r\n  \"A\",\r\n  \"B\",\r\n  \"C\",\r\n  \"D\",\r\n  \"E\",\r\n  \"F\",\r\n  \"G\",\r\n];\r\n\r\nvar wrongorRight = \"----\";\r\nvar scaling = (0.442 * window.innerWidth + 151.198) / 400;\r\n\r\n//add !mark! before the note to hightlight it\r\n//would be good for the user to keep track on which note\r\n//they are on\r\n\r\n//^ - sharp, _ - flat\r\n\r\n//add (V: V3 clef=bass\\n[V: V3]) at start of string to make treble also add\r\n// ,,2 after notes to make it work\r\n\r\nfunction createRandomNotesArray(amount) {\r\n  var firstIter = false;\r\n  Data.lastSpacing = 0;\r\n  Data.afterNoteDone = false;\r\n  Data.opacity = 0;\r\n  Data.notesDisplayed = [];\r\n  Data.notesDisplayedOther = [];\r\n\r\n  if (Data.isTreble) {\r\n    Data.afterNote = \",,2\";\r\n    //initial 21?\r\n    Data.notesDisplayedString = \"[M: 4/4]\\nV: V3 clef=bass\\n[V: V3]\";\r\n  } else {\r\n    Data.notesDisplayedString = \"[M: 4/4]\\n\";\r\n    Data.afterNote = \"2\";\r\n  }\r\n\r\n  if (Data.isFlat === false && Data.isSharp === false) {\r\n    for (var i = 0; i < amount; i++) {\r\n      if (i % 4 == 0) {\r\n        Data.notesDisplayedString += \"|\";\r\n        if (!firstIter) {\r\n          Data.notesDisplayedString += \"!mark!\";\r\n          firstIter = true;\r\n        }\r\n      }\r\n      var rand = Math.floor(Math.random() * notesListed.length);\r\n      Data.notesDisplayed.push(notesListed[rand]);\r\n      Data.notesDisplayedOther.push(notesListed[rand] + Data.afterNote);\r\n      Data.notesDisplayedString += notesListed[rand] + Data.afterNote;\r\n    }\r\n  } else if (Data.isFlat === true && Data.isSharp === false) {\r\n    for (var i = 0; i < amount; i++) {\r\n      if (i % 4 == 0) {\r\n        Data.notesDisplayedString += \"|\";\r\n        if (!firstIter) {\r\n          Data.notesDisplayedString += \"!mark!\";\r\n          firstIter = true;\r\n        }\r\n      }\r\n      var randDecision = Math.floor(Math.random() * 2);\r\n      var rand = Math.floor(Math.random() * notesListed.length);\r\n      var randFlats = Math.floor(Math.random() * notesListed.length);\r\n      if (randDecision === 0) {\r\n        var rand = Math.floor(Math.random() * notesListed.length);\r\n        Data.notesDisplayed.push(notesListed[rand]);\r\n        Data.notesDisplayedOther.push(notesListed[rand] + Data.afterNote);\r\n        Data.notesDisplayedString += notesListed[rand] + Data.afterNote;\r\n      } else {\r\n        Data.notesDisplayed.push(notesListed[randFlats]);\r\n        Data.notesDisplayedOther.push(\"_\" + notesListed[rand] + Data.afterNote);\r\n        Data.notesDisplayedString += \"_\" + notesListed[rand] + Data.afterNote;\r\n      }\r\n    }\r\n  } else if (Data.isFlat === false && Data.isSharp === true) {\r\n    for (var i = 0; i < amount; i++) {\r\n      if (i % 4 == 0) {\r\n        Data.notesDisplayedString += \"|\";\r\n        if (!firstIter) {\r\n          Data.notesDisplayedString += \"!mark!\";\r\n          firstIter = true;\r\n        }\r\n      }\r\n      var randDecision = Math.floor(Math.random() * 2);\r\n      var rand = Math.floor(Math.random() * notesListed.length);\r\n      var randSharps = Math.floor(Math.random() * notesListed.length);\r\n      if (randDecision === 0) {\r\n        Data.notesDisplayed.push(notesListed[rand]);\r\n        Data.notesDisplayedOther.push(notesListed[rand] + Data.afterNote);\r\n        Data.notesDisplayedString += notesListed[rand] + Data.afterNote;\r\n      } else {\r\n        Data.notesDisplayed.push(notesListed[randSharps]);\r\n        Data.notesDisplayedOther.push(\r\n          \"^\" + notesListed[randSharps] + Data.afterNote\r\n        );\r\n        Data.notesDisplayedString +=\r\n          \"^\" + notesListed[randSharps] + Data.afterNote;\r\n      }\r\n    }\r\n  } else {\r\n    for (var i = 0; i < amount; i++) {\r\n      if (i % 4 == 0) {\r\n        Data.notesDisplayedString += \"|\";\r\n        if (!firstIter) {\r\n          Data.notesDisplayedString += \"!mark!\";\r\n          firstIter = true;\r\n        }\r\n      }\r\n      var randDecision = Math.floor(Math.random() * 3);\r\n      var rand = Math.floor(Math.random() * notesListed.length);\r\n      var randSharps = Math.floor(Math.random() * notesListed.length);\r\n      var randFlats = Math.floor(Math.random() * notesListed.length);\r\n      if (randDecision === 0) {\r\n        Data.notesDisplayed.push(notesListed[rand]);\r\n        Data.notesDisplayedOther.push(notesListed[rand] + Data.afterNote);\r\n        Data.notesDisplayedString += notesListed[rand];\r\n        Data.notesDisplayedString += Data.afterNote;\r\n      } else if (randDecision === 1) {\r\n        Data.notesDisplayed.push(notesListed[randSharps]);\r\n        Data.notesDisplayedOther.push(\r\n          \"^\" + notesListed[randSharps] + Data.afterNote\r\n        );\r\n        Data.notesDisplayedString +=\r\n          \"^\" + notesListed[randSharps] + Data.afterNote;\r\n      } else {\r\n        Data.notesDisplayed.push(notesListed[randFlats]);\r\n        Data.notesDisplayedOther.push(\"_\" + notesListed[rand] + Data.afterNote);\r\n        Data.notesDisplayedString += \"_\" + notesListed[rand] + Data.afterNote;\r\n      }\r\n    }\r\n  }\r\n  Data.indexd = 0;\r\n}\r\n\r\ncreateRandomNotesArray(12);\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      opacity: Data.opacity,\r\n      rightorWrong: Data.rightorWrong,\r\n      notestoDisplay: Data.notesDisplayedString,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ color: \"white\" }}>\r\n        <p\r\n          unselectable=\"on\"\r\n          className=\"answerDisplay\"\r\n          style={{ display: \"flex\", justifyContent: \"center\" }}\r\n        >\r\n          SIGHT READING PRACTICE\r\n        </p>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            backgroundColor: \"white\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <Notation\r\n            notation={this.state.notestoDisplay}\r\n            engraverParams={{ scale: scaling }}\r\n          />\r\n        </div>\r\n\r\n        <p\r\n          unselectable=\"on\"\r\n          className=\"answerDisplay\"\r\n          style={{\r\n            display: \"flex\",\r\n            opacity: Data.opacity,\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          {this.state.rightorWrong}\r\n        </p>\r\n        <p\r\n          unselectable=\"on\"\r\n          className=\"answerDisplay\"\r\n          style={{\r\n            display: \"flex\",\r\n            opacity: Data.opacity,\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          {Data.correctNote.toUpperCase()}\r\n        </p>\r\n        <div\r\n          style={{ display: \"flex\", justifyContent: \"center\" }}\r\n          onClick={() =>\r\n            this.setState({\r\n              opacity: Data.opacity,\r\n              rightorWrong: Data.rightorWrong,\r\n              notestoDisplay: Data.notesDisplayedString,\r\n            })\r\n          }\r\n        >\r\n          <Piano />\r\n        </div>\r\n        <div\r\n          style={{\r\n            paddingTop: \"200px\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <div>\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  color=\"primary\"\r\n                  inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                  style={{ color: \"white\" }}\r\n                  onChange={() => (Data.isSharp = !Data.isSharp)}\r\n                ></Checkbox>\r\n              }\r\n              label=\"Include Sharps\"\r\n            ></FormControlLabel>\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  color=\"primary\"\r\n                  inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                  style={{ color: \"white\" }}\r\n                  onChange={() => (Data.isFlat = !Data.isFlat)}\r\n                ></Checkbox>\r\n              }\r\n              label=\"Include Flats\"\r\n            ></FormControlLabel>\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  color=\"primary\"\r\n                  inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                  style={{ color: \"white\" }}\r\n                  onChange={() => (Data.isTreble = !Data.isTreble)}\r\n                ></Checkbox>\r\n              }\r\n              label=\"Bass Clef\"\r\n            ></FormControlLabel>\r\n          </div>\r\n          <div>\r\n            <Button\r\n              variant=\"contained\"\r\n              onClick={() => {\r\n                createRandomNotesArray(12);\r\n                this.setState({ notestoDisplay: Data.notesDisplayedString });\r\n              }}\r\n            >\r\n              New Notes\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}