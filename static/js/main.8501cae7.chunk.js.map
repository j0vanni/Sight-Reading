{"version":3,"sources":["Data.js","Piano.js","App.js","index.js"],"names":["notesDisplayed","notesDisplayedOther","notesDisplayedString","correctNote","pianoClickedKey","indexd","opacity","rightorWrong","isSharp","isFlat","isTreble","afterNote","lastSpacing","noteAmount","wrongNotes","notes","blackkeys","correct","Data","wrong","Checker","array","index","answer","isSharps","isFlats","replace","substring","note","capNote","toUpperCase","answerNote","terribleSharpChecker","terribleFlatChecker","newNotesDisplayed","initialSpacing","insert","length","marking","setPianoClick","item","String","prototype","string","this","substr","StyleSheet","width","height","borderStyle","borderColor","borderRadius","borderWidth","backgroundColor","whitekeys","Piano","props","style","display","position","map","onClick","key","left","count","at","notesListed","scaling","window","innerWidth","createRandomNotesArray","amount","redone","firstIter","afterNoteDone","i","rand","Math","floor","random","push","randDecision","randFlats","randSharps","App","state","notestoDisplay","setState","color","unselectable","className","justifyContent","notation","engraverParams","scale","onPianoClick","paddingTop","flexDirection","alignItems","FormControlLabel","control","Checkbox","inputProps","onChange","label","defaultChecked","Button","variant","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8501cae7.chunk.js","sourcesContent":["export default {\r\n  notesDisplayed: [],\r\n  notesDisplayedOther: [],\r\n  notesDisplayedString: \"\",\r\n  correctNote: \"placeholder\",\r\n  pianoClickedKey: \"\",\r\n  indexd: 0,\r\n  opacity: 0,\r\n  rightorWrong: \"placeholder\",\r\n  isSharp: false,\r\n  isFlat: false,\r\n  isTreble: false,\r\n  afterNote: \"2\",\r\n  lastSpacing: 0,\r\n  noteAmount: 12,\r\n  wrongNotes: true,\r\n};\r\n","import React from \"react\";\r\nimport Data from \"./Data\";\r\n\r\nconst notes = [\"c\", \"d\", \"e\", \"f\", \"g\", \"a\", \"b\"];\r\nconst blackkeys = [\"cd\", \"de\", \"fg\", \"ga\", \"ab\"];\r\n\r\nvar thisthing = 0;\r\n\r\nfunction correct() {\r\n  Data.opacity = 1;\r\n  Data.rightorWrong = \"Correct.\";\r\n}\r\n\r\nfunction wrong() {\r\n  Data.opacity = 1;\r\n  Data.rightorWrong = \"Wrong.\";\r\n}\r\n\r\nString.prototype.insert = function (index, string) {\r\n  if (index > 0) {\r\n    return this.substring(0, index) + string + this.substr(index);\r\n  }\r\n  return string + this;\r\n};\r\n\r\nfunction marking(index) {\r\n  var newNotesDisplayed = Data.notesDisplayedString.replace(\"!mark!\", \"\");\r\n  Data.notesDisplayedString = newNotesDisplayed;\r\n  var initialSpacing = 10;\r\n\r\n  if ((index + 1) % 4 === 0 && index !== 0) {\r\n    Data.lastSpacing++;\r\n  }\r\n\r\n  if (Data.isTreble === true) {\r\n    initialSpacing = 33;\r\n  }\r\n\r\n  Data.notesDisplayedString = Data.notesDisplayedString.insert(\r\n    initialSpacing + Data.notesDisplayedOther[index].length + Data.lastSpacing,\r\n    \"!mark!\"\r\n  );\r\n\r\n  Data.lastSpacing = Data.notesDisplayedOther[index].length + Data.lastSpacing;\r\n}\r\nfunction Checker(array, index, answer) {\r\n  var isSharps = false;\r\n  var isFlats = false;\r\n  var replace = array[index].replace(\"2\", \"\");\r\n  Data.correctNote = replace.replace(\",,\", \"\");\r\n\r\n  if (array[index].substring(0, 1) === \"^\") {\r\n    isSharps = true;\r\n  } else if (array[index].substring(0, 1) === \"_\") {\r\n    isFlats = true;\r\n  }\r\n\r\n  if (isSharps === true) {\r\n    terribleSharpChecker(replace.replace(\",,\", \"\"), answer);\r\n  } else if (isFlats === true) {\r\n    terribleFlatChecker(replace.replace(\",,\", \"\"), answer);\r\n  } else if (answer.toUpperCase() === replace.replace(\",,\", \"\").toUpperCase()) {\r\n    correct();\r\n  } else {\r\n    wrong();\r\n  }\r\n\r\n  if (Data.rightorWrong === \"Wrong.\" && !Data.wrongNotes) {\r\n  } else {\r\n    marking(index);\r\n\r\n    index++;\r\n    Data.indexd++;\r\n  }\r\n}\r\n\r\nfunction terribleSharpChecker(note, answer) {\r\n  var capNote = note.replace(\"^\", \"\").toUpperCase();\r\n  var answerNote = answer.toUpperCase();\r\n\r\n  Data.correctNote = `${capNote} Sharp`;\r\n\r\n  if (capNote === \"C\" && answerNote === \"CD\") {\r\n    correct();\r\n  } else if (capNote === \"D\" && answerNote === \"DE\") {\r\n    correct();\r\n  } else if (capNote === \"E\" && answerNote === \"F\") {\r\n    correct();\r\n  } else if (capNote === \"F\" && answerNote === \"FG\") {\r\n    correct();\r\n  } else if (capNote === \"G\" && answerNote === \"GA\") {\r\n    correct();\r\n  } else if (capNote === \"A\" && answerNote === \"AB\") {\r\n    correct();\r\n  } else if (capNote === \"B\" && answerNote === \"C\") {\r\n    correct();\r\n  } else {\r\n    wrong();\r\n  }\r\n}\r\n\r\nfunction terribleFlatChecker(note, answer) {\r\n  var capNote = note.replace(\"_\", \"\").toUpperCase();\r\n  var answerNote = answer.toUpperCase();\r\n\r\n  Data.correctNote = `${capNote} Flat`;\r\n\r\n  if (capNote === \"C\" && answerNote === \"B\") {\r\n    correct();\r\n  } else if (capNote === \"D\" && answerNote === \"CD\") {\r\n    correct();\r\n  } else if (capNote === \"E\" && answerNote === \"DE\") {\r\n    correct();\r\n  } else if (capNote === \"F\" && answerNote === \"E\") {\r\n    correct();\r\n  } else if (capNote === \"G\" && answerNote === \"FG\") {\r\n    correct();\r\n  } else if (capNote === \"A\" && answerNote === \"GA\") {\r\n    correct();\r\n  } else if (capNote === \"B\" && answerNote === \"AB\") {\r\n    correct();\r\n  } else {\r\n    wrong();\r\n  }\r\n}\r\n\r\nfunction godPleaseWork(count) {\r\n  if (count > 2) {\r\n    return 54 * (count + 1) - 15;\r\n  }\r\n  return 54 * count - 15;\r\n}\r\n\r\nfunction setPianoClick(item) {\r\n  Data.pianoClickedKey = \"\";\r\n  Data.pianoClickedKey = item;\r\n  Checker(Data.notesDisplayedOther, Data.indexd, Data.pianoClickedKey);\r\n  Data.opacity = 1;\r\n}\r\n\r\nfunction Piano(props) {\r\n  return (\r\n    <div style={{ display: \"flex\", position: \"absolute\" }}>\r\n      {notes.map((item) => {\r\n        return (\r\n          <div key={item}>\r\n            <div\r\n              style={StyleSheet.whitekeys}\r\n              onClick={() => setPianoClick(item)}\r\n            />\r\n          </div>\r\n        );\r\n      })}\r\n      {blackkeys.map((item, key) => {\r\n        return (\r\n          <div\r\n            style={{\r\n              position: \"absolute\",\r\n              left: `${godPleaseWork(key + 1)}px`,\r\n            }}\r\n            key={item}\r\n          >\r\n            <div\r\n              style={StyleSheet.blackkeys}\r\n              onClick={() => setPianoClick(item)}\r\n            />\r\n            {item.at}\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst StyleSheet = {\r\n  blackkeys: {\r\n    width: \"25px\",\r\n    height: \"100px\",\r\n    borderStyle: \"solid\",\r\n    borderColor: \"white\",\r\n    borderRadius: \"5px\",\r\n    borderWidth: \"2px\",\r\n    backgroundColor: \"black\",\r\n  },\r\n  whitekeys: {\r\n    width: \"50px\",\r\n    height: \"200px\",\r\n    borderStyle: \"solid\",\r\n    borderColor: \"black\",\r\n    borderRadius: \"5px\",\r\n    borderWidth: \"2px\",\r\n    backgroundColor: \"white\",\r\n  },\r\n};\r\n\r\nexport default Piano;\r\n","import \"./App.css\";\r\nimport React from \"react\";\r\nimport Data from \"./Data\";\r\nimport Piano from \"./Piano\";\r\nimport { Button, Checkbox, FormControlLabel } from \"@material-ui/core\";\r\nimport { Notation } from \"react-abc\";\r\n\r\nconst notesListed = [\r\n  \"a\",\r\n  \"b\",\r\n  \"c\",\r\n  \"d\",\r\n  \"e\",\r\n  \"f\",\r\n  \"g\",\r\n  \"A\",\r\n  \"B\",\r\n  \"C\",\r\n  \"D\",\r\n  \"E\",\r\n  \"F\",\r\n  \"G\",\r\n];\r\n\r\nvar wrongorRight = \"----\";\r\nvar scaling = (0.25 * window.innerWidth + 151.198) / 400;\r\n\r\n//add !mark! before the note to hightlight it\r\n//would be good for the user to keep track on which note\r\n//they are on\r\n\r\n//^ - sharp, _ - flat\r\n\r\n//add (V: V3 clef=bass\\n[V: V3]) at start of string to make treble also add\r\n// ,,2 after notes to make it work\r\n\r\nfunction createRandomNotesArray(amount, redone) {\r\n  if (redone === false) {\r\n    Data.opacity = 0;\r\n  }\r\n  var firstIter = false;\r\n  Data.lastSpacing = 0;\r\n  Data.afterNoteDone = false;\r\n  Data.notesDisplayed = [];\r\n  Data.notesDisplayedOther = [];\r\n\r\n  if (Data.isTreble) {\r\n    Data.afterNote = \",,2\";\r\n    //initial 21?\r\n    Data.notesDisplayedString = \"[M: 4/4]\\nV: V3 clef=bass\\n[V: V3]\";\r\n  } else {\r\n    Data.notesDisplayedString = \"[M: 4/4]\\n\";\r\n    Data.afterNote = \"2\";\r\n  }\r\n\r\n  if (Data.isFlat === false && Data.isSharp === false) {\r\n    for (var i = 0; i < amount; i++) {\r\n      if (i % 4 == 0) {\r\n        Data.notesDisplayedString += \"|\";\r\n        if (!firstIter) {\r\n          Data.notesDisplayedString += \"!mark!\";\r\n          firstIter = true;\r\n        }\r\n      }\r\n      var rand = Math.floor(Math.random() * notesListed.length);\r\n      Data.notesDisplayed.push(notesListed[rand]);\r\n      Data.notesDisplayedOther.push(notesListed[rand] + Data.afterNote);\r\n      Data.notesDisplayedString += notesListed[rand] + Data.afterNote;\r\n    }\r\n  } else if (Data.isFlat === true && Data.isSharp === false) {\r\n    for (var i = 0; i < amount; i++) {\r\n      if (i % 4 == 0) {\r\n        Data.notesDisplayedString += \"|\";\r\n        if (!firstIter) {\r\n          Data.notesDisplayedString += \"!mark!\";\r\n          firstIter = true;\r\n        }\r\n      }\r\n      var randDecision = Math.floor(Math.random() * 2);\r\n      var rand = Math.floor(Math.random() * notesListed.length);\r\n      var randFlats = Math.floor(Math.random() * notesListed.length);\r\n      if (randDecision === 0) {\r\n        var rand = Math.floor(Math.random() * notesListed.length);\r\n        Data.notesDisplayed.push(notesListed[rand]);\r\n        Data.notesDisplayedOther.push(notesListed[rand] + Data.afterNote);\r\n        Data.notesDisplayedString += notesListed[rand] + Data.afterNote;\r\n      } else {\r\n        Data.notesDisplayed.push(notesListed[randFlats]);\r\n        Data.notesDisplayedOther.push(\"_\" + notesListed[rand] + Data.afterNote);\r\n        Data.notesDisplayedString += \"_\" + notesListed[rand] + Data.afterNote;\r\n      }\r\n    }\r\n  } else if (Data.isFlat === false && Data.isSharp === true) {\r\n    for (var i = 0; i < amount; i++) {\r\n      if (i % 4 == 0) {\r\n        Data.notesDisplayedString += \"|\";\r\n        if (!firstIter) {\r\n          Data.notesDisplayedString += \"!mark!\";\r\n          firstIter = true;\r\n        }\r\n      }\r\n      var randDecision = Math.floor(Math.random() * 2);\r\n      var rand = Math.floor(Math.random() * notesListed.length);\r\n      var randSharps = Math.floor(Math.random() * notesListed.length);\r\n      if (randDecision === 0) {\r\n        Data.notesDisplayed.push(notesListed[rand]);\r\n        Data.notesDisplayedOther.push(notesListed[rand] + Data.afterNote);\r\n        Data.notesDisplayedString += notesListed[rand] + Data.afterNote;\r\n      } else {\r\n        Data.notesDisplayed.push(notesListed[randSharps]);\r\n        Data.notesDisplayedOther.push(\r\n          \"^\" + notesListed[randSharps] + Data.afterNote\r\n        );\r\n        Data.notesDisplayedString +=\r\n          \"^\" + notesListed[randSharps] + Data.afterNote;\r\n      }\r\n    }\r\n  } else {\r\n    for (var i = 0; i < amount; i++) {\r\n      if (i % 4 == 0) {\r\n        Data.notesDisplayedString += \"|\";\r\n        if (!firstIter) {\r\n          Data.notesDisplayedString += \"!mark!\";\r\n          firstIter = true;\r\n        }\r\n      }\r\n      var randDecision = Math.floor(Math.random() * 3);\r\n      var rand = Math.floor(Math.random() * notesListed.length);\r\n      var randSharps = Math.floor(Math.random() * notesListed.length);\r\n      var randFlats = Math.floor(Math.random() * notesListed.length);\r\n      if (randDecision === 0) {\r\n        Data.notesDisplayed.push(notesListed[rand]);\r\n        Data.notesDisplayedOther.push(notesListed[rand] + Data.afterNote);\r\n        Data.notesDisplayedString += notesListed[rand];\r\n        Data.notesDisplayedString += Data.afterNote;\r\n      } else if (randDecision === 1) {\r\n        Data.notesDisplayed.push(notesListed[randSharps]);\r\n        Data.notesDisplayedOther.push(\r\n          \"^\" + notesListed[randSharps] + Data.afterNote\r\n        );\r\n        Data.notesDisplayedString +=\r\n          \"^\" + notesListed[randSharps] + Data.afterNote;\r\n      } else {\r\n        Data.notesDisplayed.push(notesListed[randFlats]);\r\n        Data.notesDisplayedOther.push(\"_\" + notesListed[rand] + Data.afterNote);\r\n        Data.notesDisplayedString += \"_\" + notesListed[rand] + Data.afterNote;\r\n      }\r\n    }\r\n  }\r\n  Data.indexd = 0;\r\n}\r\n\r\ncreateRandomNotesArray(Data.noteAmount, false);\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      opacity: Data.opacity,\r\n      rightorWrong: Data.rightorWrong,\r\n      notestoDisplay: Data.notesDisplayedString,\r\n    };\r\n  }\r\n\r\n  onPianoClick() {\r\n    if (Data.indexd === Data.noteAmount) {\r\n      createRandomNotesArray(Data.noteAmount, true);\r\n    }\r\n    this.setState({\r\n      opacity: Data.opacity,\r\n      rightorWrong: Data.rightorWrong,\r\n      notestoDisplay: Data.notesDisplayedString,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ color: \"white\" }}>\r\n        <p\r\n          unselectable=\"on\"\r\n          className=\"answerDisplay\"\r\n          style={{ display: \"flex\", justifyContent: \"center\" }}\r\n        >\r\n          SIGHT READING PRACTICE\r\n        </p>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            backgroundColor: \"white\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <Notation\r\n            notation={this.state.notestoDisplay}\r\n            engraverParams={{ scale: scaling }}\r\n          />\r\n        </div>\r\n\r\n        <p\r\n          unselectable=\"on\"\r\n          className=\"answerDisplay\"\r\n          style={{\r\n            display: \"flex\",\r\n            opacity: Data.opacity,\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          {this.state.rightorWrong}\r\n        </p>\r\n        <p\r\n          unselectable=\"on\"\r\n          className=\"answerDisplay\"\r\n          style={{\r\n            display: \"flex\",\r\n            opacity: Data.opacity,\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          {Data.correctNote.toUpperCase()}\r\n        </p>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n          }}\r\n          onClick={() => this.onPianoClick()}\r\n        >\r\n          <Piano />\r\n        </div>\r\n        <div\r\n          style={{\r\n            paddingTop: \"200px\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <div>\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  color=\"primary\"\r\n                  inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                  style={{ color: \"white\" }}\r\n                  onChange={() => (Data.isSharp = !Data.isSharp)}\r\n                ></Checkbox>\r\n              }\r\n              label=\"Include Sharps\"\r\n            />\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  color=\"primary\"\r\n                  inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                  style={{ color: \"white\" }}\r\n                  onChange={() => (Data.isFlat = !Data.isFlat)}\r\n                ></Checkbox>\r\n              }\r\n              label=\"Include Flats\"\r\n            />\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  color=\"primary\"\r\n                  inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                  style={{ color: \"white\" }}\r\n                  onChange={() => (Data.isTreble = !Data.isTreble)}\r\n                ></Checkbox>\r\n              }\r\n              label=\"Bass Clef\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  defaultChecked\r\n                  color=\"primary\"\r\n                  inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                  style={{ color: \"white\" }}\r\n                  onChange={() => (Data.wrongNotes = !Data.wrongNotes)}\r\n                ></Checkbox>\r\n              }\r\n              label=\"Keep Going if Wrong\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <Button\r\n              variant=\"contained\"\r\n              onClick={() => {\r\n                createRandomNotesArray(12);\r\n                this.setState({ notestoDisplay: Data.notesDisplayedString });\r\n              }}\r\n            >\r\n              New Notes\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}